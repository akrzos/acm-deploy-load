---
# ibu-prepare-seed-cluster-operators tasks

- name: Create directories for IBU seed cluster preparation
  file:
    path: "{{ item }}"
    state: directory
  loop:
  - "{{ install_directory }}/rhacm-ztp"
  - "{{ install_directory }}/rhacm-ztp/ibu"
  - "{{ install_directory }}/rhacm-ztp/ibu/seed"

- name: Template the new catalogsource
  template:
    src: catalogsource.yml.j2
    dest: "{{ install_directory }}/rhacm-ztp/ibu/seed/catalogsource.yml"

- name: Apply the catalogsource for operator upgrade
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc apply -f {{ install_directory }}/rhacm-ztp/ibu/seed/catalogsource.yml

- name: Get CSVs for display
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc get csvs -A
  register: check_csvs
- name: Display CSVs prior to Operator upgrade
  debug:
    msg: "{{ check_csvs.stdout_lines }}"

- name: Get operator pods for display
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc get po --no-headers -n {{ item.namespace }}
  register: check_operator_pods
  loop: "{{ operators_to_upgrade }}"
- name: Display operator pods prior to Operator upgrade
  debug:
    msg: "{{ item.stdout_lines }}"
  loop: "{{ check_operator_pods.results }}"

- name: Check that the catalogsource for operator upgrade is ready
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc get catalogsource -n openshift-marketplace {{ catalogsource_name }} -o json | jq -r '.status.connectionState.lastObservedState'
  register: check_catalogsource
  ignore_errors: true
  until: check_catalogsource.stdout == "READY"
  retries: 60
  delay: 2

- name: Set each operator to upgrade automatically
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc patch subscriptions -n {{ item.namespace }} {{ item.subscription_name }} --type merge -p '{"spec": {"installPlanApproval": "Automatic"}}'
  loop: "{{ operators_to_upgrade }}"

- name: Set each operator to new catalogsource
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc patch subscriptions -n {{ item.namespace }} {{ item.subscription_name }} --type merge -p '{"spec": {"source": "{{ catalogsource_name }}"}}'
  loop: "{{ operators_to_upgrade }}"

- name: Check that operator had upgraded
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc get csvs -n {{ item.namespace }} -o json | jq '.items[] | select(.status.reason=="InstallSucceeded").spec.version' | grep "{{ item.search }}"
  loop: "{{ operators_to_upgrade }}"
  register: check_csvs
  until: check_csvs.rc == 0
  retries: 120
  delay: 2

- name: Get CSVs for display
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc get csvs -A
  register: check_csvs
- name: Display CSVs after Operator upgrade
  debug:
    msg: "{{ check_csvs.stdout_lines }}"

- name: Get operator pods for display
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc get po --no-headers -n {{ item.namespace }}
  register: check_operator_pods
  loop: "{{ operators_to_upgrade }}"
- name: Display operator pods after the Operator upgrade
  debug:
    msg: "{{ item.stdout_lines }}"
  loop: "{{ check_operator_pods.results }}"

# Operators have more pods than just the operator pod which can take significant time to be replaced after operator
# upgrade claims the install is completed. Pausing ensures those pods are replaced after operator upgrade for IBU.
- name: Pause for 10 minutes for remaining operator pod replacement
  pause:
    seconds: 600

- name: Get operator pods for display
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc get po --no-headers -n {{ item.namespace }}
  register: check_operator_pods
  loop: "{{ operators_to_upgrade }}"
- name: Display operator pods 10 minutes after the Operator upgrade
  debug:
    msg: "{{ item.stdout_lines }}"
  loop: "{{ check_operator_pods.results }}"
