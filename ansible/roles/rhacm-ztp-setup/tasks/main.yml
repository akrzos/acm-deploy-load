---
# rhacm-ztp-setup tasks

- name: Clear old cnf-features-deploy clone
  file:
    path: "{{ item }}"
    state: absent
  loop:
  - "{{ install_directory }}/rhacm-ztp/cnf-features-deploy"

- name: Create directories for rhacm-ztp
  file:
    path: "{{ item }}"
    state: directory
  loop:
  - "{{ install_directory }}/rhacm-ztp"
  - "{{ install_directory }}/rhacm-ztp/cnf-features-deploy"

- name: Clone cnf-features-deploy
  git:
    repo: "{{ cnf_features_deploy_repo }}"
    dest: "{{ install_directory }}/rhacm-ztp/cnf-features-deploy"
    force: true
    version: "{{ cnf_features_deploy_branch }}"

# Perhaps we can detect if the repo exists already instead of ignoring errors
- name: Create cnf-features-deploy repo in gogs
  uri:
    url: "http://{{ gogs_host }}:{{ gogs_port }}/api/v1/admin/users/{{ gogs_username }}/repos"
    user: "{{ gogs_username }}"
    password: "{{ gogs_password }}"
    force_basic_auth: true
    method: POST
    headers:
      content-type: application/json
      Accept: application/json
    body: {"name": "cnf-features-deploy", "description": "test repo", "private": false}
    body_format: json
    validate_certs: no
    status_code: 201
    return_content: yes
  ignore_errors: true

# The --force flag on the git push forces the gogs fork of the repo to be reset to the above "clone"
- name: Push cnf-features-deploy into gogs
  shell: |
    cd {{ install_directory }}/rhacm-ztp/cnf-features-deploy
    git remote add origin-gogs http://{{ gogs_username }}:{{ gogs_password }}@{{ gogs_host }}:{{ gogs_port }}/testadmin/cnf-features-deploy.git
    git push -u origin-gogs --all --force

- name: Remove cnf-tests directory from cnf-features-deploy
  file:
    state: absent
    path: "{{ install_directory }}/rhacm-ztp/cnf-features-deploy/cnf-tests"

- name: Patches for cnf-features-deploy argocd-openshift-gitops-patch.json
  replace:
    path: "{{ install_directory }}/rhacm-ztp/cnf-features-deploy/ztp/gitops-subscriptions/argocd/deployment/argocd-openshift-gitops-patch.json"
    replace: "{{ item.replace }}"
    regexp: "{{ item.regexp }}"
  when: item.enabled | default(true)
  loop:
  - replace: "{{ rhacm_disconnected_registry }}:{{ rhacm_disconnected_registry_port }}"
    regexp: "quay.io"
    enabled: "{{ rhacm_disconnected_registry and rhacm_disconnected_registry|length > 1 }}"
  # - replace: "openshift-kni"
  #   regexp: "redhat_emp1"
  # For rhacm policy generator release-4.14 branch
  - replace: "{{ rhacm_disconnected_registry }}:{{ rhacm_disconnected_registry_port }}"
    regexp: "registry.redhat.io"
    enabled: "{{ rhacm_disconnected_registry and rhacm_disconnected_registry|length > 1 }}"
  # - replace: "acm-d"
  #   regexp: "rhacm2"
  #   enabled: "{{ rhacm_disconnected_registry and rhacm_disconnected_registry|length > 1 }}"
  # release-4.17 cnf-features-deploy
  - replace: "{{ rhacm_policy_generator_image_tag }}"
    regexp: "v2.11"
  - replace: "{{ rhacm_policy_generator_image_tag }}"
    regexp: "v2.7"
  # release-4.11 cnf-features-deploy
  - replace: "{{ ztp_site_generator_image_tag }}"
    regexp: "latest"
  # release-4.10 cnf-features-deploy
  - replace: "{{ ztp_site_generator_image_tag }}"
    regexp: "4.10.0"

- name: Remove the cluster/policies app from cnf-features-deploy argocd deployment
  file:
    state: absent
    path: "{{ install_directory }}/rhacm-ztp/cnf-features-deploy/ztp/gitops-subscriptions/argocd/deployment/{{ item }}"
  loop:
  - clusters-app.yaml
  - policies-app.yaml

- name: Remove clusters-app.yaml and policies-app.yaml from cnf-features-deploy argocd deployment kustomization.yaml
  replace:
    path: "{{ install_directory }}/rhacm-ztp/cnf-features-deploy/ztp/gitops-subscriptions/argocd/deployment/kustomization.yaml"
    replace: ""
    regexp: "{{ item }}"
  loop:
  - ".*- clusters-app.yaml"
  - ".*- policies-app.yaml"

- name: Commit and push ZTP initial configuration to cnf-features-deploy
  shell: |
    cd {{ install_directory }}/rhacm-ztp/cnf-features-deploy
    git commit -a -m "Add common ZTP inital configuration"
    git push origin-gogs
