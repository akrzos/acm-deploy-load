apiVersion: v1beta1
kind: ImageBasedInstallationConfig
metadata:
  name: image-based-installation-config
{% if rhacm_disconnected_registry and rhacm_disconnected_registry|length > 1 %}
additionalTrustBundle: |
  {{ mirror_cert.content | b64decode | indent(width=2) }}
ImageDigestSources:
- mirrors:
  - {{ rhacm_disconnected_registry }}:{{ rhacm_disconnected_registry_port }}/ocp4/openshift4
  source: quay.io/openshift-release-dev/ocp-release
- mirrors:
  - {{ rhacm_disconnected_registry }}:{{ rhacm_disconnected_registry_port }}/ocp4/openshift4
  source: quay.io/openshift-release-dev/ocp-v4.0-art-dev
- mirrors:
  - {{ rhacm_disconnected_registry }}:{{ rhacm_disconnected_registry_port }}
  source: quay.io
- mirrors:
  - {{ rhacm_disconnected_registry }}:{{ rhacm_disconnected_registry_port }}
  source: registry.redhat.io
- mirrors:
  - {{ rhacm_disconnected_registry }}:{{ rhacm_disconnected_registry_port }}
  source: brew.registry.redhat.io
- mirrors:
  - {{ rhacm_disconnected_registry }}:{{ rhacm_disconnected_registry_port }}
  source: registry-proxy.engineering.redhat.com
{% endif %}
# The following fields are required
seedImage: {{ rhacm_disconnected_registry }}:{{ rhacm_disconnected_registry_port }}/openshift-kni/ocp-ibu:{{ seed_image_version }}.ibu-x86_64
seedVersion: "{{ seed_image_version }}"
extraPartitionStart: "50G"
{% if ibi_prep_iso_ignitionConfigOverride|length > 2%}
ignitionConfigOverride: '{{ ibi_prep_iso_ignitionConfigOverride }}'
{% endif %}
installationDisk: "/dev/sda"
sshKey: "{{ lookup('file', ssh_public_key_file) }}"
pullSecret: '{"auths": {"{{ rhacm_disconnected_registry }}:{{ rhacm_disconnected_registry_port }}": {"auth": "{{ (registry_user + ':' + registry_password) | b64encode }}"}}}'
#rhcosLiveIso: "https://mirror.openshift.com/pub/openshift-v4/amd64/dependencies/rhcos/latest/rhcos-live.x86_64.iso"
#precacheBestEffort: true
shutdown: true
networkConfig:
  interfaces:
  - name: {{ ibi_config_nic_interface }}
    identifier: mac-address
    mac-address: {{ hostvars[hv_vm_target].mac_address  }}
    type: ethernet
    state: up
{% if hostvars[hv_vm_target].ip | ansible.utils.ipv4 %}
    ipv4:
      enabled: true
      address:
      - ip: "{{ hostvars[hv_vm_target].ip }}"
        prefix-length: {{ hostvars[hv_vm_target].network_prefix }}
    ipv6:
      enabled: false
{% else %}
    ipv4:
      enabled: false
    ipv6:
      enabled: true
      address:
      - ip: "{{ hostvars[hv_vm_target].ip }}"
        prefix-length: {{ hostvars[hv_vm_target].network_prefix }}
{% endif %}
  dns-resolver:
    config:
      server:
      - {{ hostvars[hv_vm_target].hv_ip }}
  routes:
    config:
    - destination: {{ "::/0" if hostvars[hv_vm_target].ip | ansible.utils.ipv6 else "0.0.0.0/0" }}
      metric: 150
      next-hop-address: {{ hostvars[hv_vm_target].gateway }}
      next-hop-interface: {{ ibi_config_nic_interface }}
