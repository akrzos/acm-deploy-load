---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ cluster_name }}
  labels:
    name: {{ cluster_name }}
---
apiVersion: v1
kind: Secret
metadata:
  name: assisted-deployment-pull-secret
  namespace: {{ cluster_name }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: "{{ pull_secret | to_json | b64encode }}"
{% for node in core_cluster_nodes %}
{%   set sno_long_hostname=node.pm_addr | replace('mgmt-','') %}
{%   set sno_short_hostname=(sno_long_hostname.split('.')[0]) %}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ sno_short_hostname }}-bmc-secret
  namespace: {{ cluster_name }}
type: Opaque
data:
  password: {{ node.pm_password | b64encode }}
  username: {{ node.pm_user | b64encode }}
{% endfor %}
---
apiVersion: siteconfig.open-cluster-management.io/v1alpha1
kind: ClusterInstance
metadata:
  name: {{ cluster_name }}
  namespace: {{ cluster_name }}
spec:
  baseDomain: {{ core_cluster_base_domain }}
  pullSecretRef:
    name: "assisted-deployment-pull-secret"
  clusterImageSetNameRef: {{ cluster_image_set }}
  sshPublicKey: {{ lookup('file', ssh_public_key_file) }}
  clusterName: {{ cluster_name }}
  networkType: OVNKubernetes
  clusterType: HighlyAvailable
  # Reference configuration extra manifests
{% if telco_core_clusterinstance_extra_manifests or telco_core_clusterinstance_custom_manifests %}
  extraManifestsRefs:
{%   if telco_core_clusterinstance_extra_manifests %}
  - name: extra-manifests-configmap
{%   else %}
  # - name: extra-manifests-configmap
{%   endif %}
{%   if telco_core_clusterinstance_custom_manifests %}
  - name: custom-manifests-configmap
{%   else %}
  # - name: custom-manifests-configmap
{%   endif %}
{% else %}
  # extraManifestsRefs:
  # - name: extra-manifests-configmap
  # - name: custom-manifests-configmap
{% endif %}
  extraLabels:
    ManagedCluster:
      common: "core"
      version: "4.18"
      region: "zone-1"
      name: {{ cluster_name }}
      vendor: OpenShift
      observability: disabled
  clusterNetwork:
  - cidr: {{ core_cluster_cluster_network }}
    hostPrefix: {{ core_cluster_host_prefix }}
  apiVIPs:
  - {{ core_cluster_api_address }}
  ingressVIPs:
  - {{ core_cluster_ingress_address }}
  serviceNetwork:
  - cidr: {{ core_cluster_service_network }}
  machineNetwork:
  - cidr: {{ core_cluster_machine_network }}
  additionalNTPSources:
  - {{ core_cluster_ntp_source }}
  templateRefs:
  - name: ai-cluster-templates-v1
    namespace: open-cluster-management
  nodes:
{% for node in core_cluster_nodes %}
{%   set sno_long_hostname=node.pm_addr | replace('mgmt-','') %}
{%   set sno_short_hostname=(sno_long_hostname.split('.')[0]) %}
  - hostName: {{ sno_short_hostname }}
{%   if loop.index <= 3 %}
    role: "master"
{%   else %}
    role: "worker"
{%   endif %}
    automatedCleaningMode: disabled
    # ironicInspect defaults to enabled and consumes more time for inspection of nodes
    ironicInspect: disabled
    # bmcAddress: redfish-virtualmedia+https://{{ node.pm_addr }}/redfish/v1/Systems/System.Embedded.1/
    bmcAddress: idrac-virtualmedia+https://{{ node.pm_addr }}/redfish/v1/Systems/System.Embedded.1/
    bmcCredentialsName:
      name: {{ sno_short_hostname }}-bmc-secret
    bootMACAddress: {{ node.mac[core_cluster_network_interface_idx] }}
    bootMode: "UEFI"
    # bootMode: "UEFISecureBoot"
    # rootDeviceHints:
    #   deviceName: "/dev/disk/by-path/pci-0000:00:11.5-ata-3.0"
    nodeNetwork:
      interfaces:
      - macAddress: {{ node.mac[core_cluster_network_interface_idx] }}
        name: eno1
      config:
        interfaces:
        - name: eno1
          type: ethernet
          state: up
          ipv4:
            address:
            - ip: {{ core_cluster_machine_network | ansible.utils.nthhost(loop.index0 + core_cluster_node_ip_offset) }}
              prefix-length: {{ core_cluster_machine_network | ansible.utils.ipaddr('prefix') }}
            enabled: true
          ipv6:
            enabled: false
        dns-resolver:
          config:
            server:
            - {{ core_cluster_dns_address }}
        routes:
          config:
          - destination: 0.0.0.0/0
            next-hop-interface: eno1
            next-hop-address: {{ core_cluster_default_gateway_address }}
            table-id: 254
    templateRefs:
    - name: ai-node-templates-v1
      namespace: open-cluster-management
{% endfor %}
