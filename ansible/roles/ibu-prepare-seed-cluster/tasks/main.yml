---
# ibu-prepare-seed-cluster tasks

- name: Create directories for IBU seed cluster preparation
  file:
    path: "{{ item }}"
    state: directory
  loop:
  - "{{ install_directory }}/rhacm-ztp"
  - "{{ install_directory }}/rhacm-ztp/ibu"
  - "{{ install_directory }}/rhacm-ztp/ibu/seed"

- name: Select cluster to use as seed cluster
  shell: |
    KUBECONFIG={{ hub_cluster_kubeconfig }} oc get managedclusters -l ztp-done=,common=true --no-headers -o custom-columns=NAME:'.metadata.name' | head -n 1
  register: select_cluster
  when: seed_cluster == ""

- name: Set seed_cluster when not previously set
  set_fact:
    seed_cluster: "{{ select_cluster.stdout }}"
  when: seed_cluster == ""

- name: Display selected seed_cluster
  debug:
    msg: "{{ seed_cluster }}"

- name: Set seed cluster kubeconfig
  set_fact:
    seedcluster_kubeconfig: "{{ install_directory }}/rhacm-ztp/ibu/seed/{{ seed_cluster }}.kubeconfig"

- name: Copy {{ seed_cluster }} kubeconfig
  copy:
    src: "/root/hv-vm/kc/{{ seed_cluster }}/kubeconfig"
    dest: "{{ seedcluster_kubeconfig }}"
    remote_src: true

- name: Get cluster applicaiton with seed cluster
  shell: |
    grep -l "{{ seed_cluster }}" /root/rhacm-ztp/cnf-features-deploy/ztp/gitops-subscriptions/argocd/cluster/ztp-clusters-*/kustomization.yaml
  register: seed_cluster_kustomization

- name: Set cluster application containing the seed cluster
  set_fact:
    seed_cluster_application: "{{ seed_cluster_kustomization.stdout.split('/')[-2] }}"

- name: Comment {{ seed_cluster }} in cluster applications - {{ seed_cluster_kustomization.stdout }}
  replace:
    path: "{{ seed_cluster_kustomization.stdout }}"
    replace: "{{ item.replace }}"
    regexp: "{{ item.regexp }}"
  loop:
  - replace: "#- ./{{ seed_cluster }}-siteconfig.yml"
    regexp: "^- ./{{ seed_cluster }}-siteconfig.yml"
  - replace: "#- ./{{ seed_cluster }}-resources.yml"
    regexp: "^- ./{{ seed_cluster }}-resources.yml"

- name: Commit and push the above changes to cnf-features-deploy
  shell: |
    cd {{ install_directory }}/rhacm-ztp/cnf-features-deploy
    git add ztp/gitops-subscriptions/argocd/cluster/ ztp/gitops-subscriptions/argocd/cluster-applications/
    git commit -a -m "Remove seed cluster {{ seed_cluster }} from cluster application - {{ seed_cluster_application }}"
    git push origin-gogs

- name: Trigger cluster application {{ seed_cluster_application }} for refresh
  shell: |
    KUBECONFIG={{ hub_cluster_kubeconfig }} oc annotate applications.argoproj.io -n openshift-gitops {{ seed_cluster_application }} argocd.argoproj.io/refresh=normal

# View upgrade graphs
# https://access.redhat.com/labs/ocpupgradegraph
# https://ctron.github.io/openshift-update-graph/#fast-4.15
- name: Download upgrade graphs
  get_url:
    url: "{{ item.url }}"
    dest: "{{ http_store_path }}/data/upgrade/{{ item.name }}"
  loop:
  - url: https://api.openshift.com/api/upgrades_info/v1/graph?channel=stable-4.15
    name: upgrade-graph_stable-4.15
  - url: https://api.openshift.com/api/upgrades_info/v1/graph?channel=fast-4.15
    name: upgrade-graph_fast-4.15

# ignore_errors because we want the namespace to not exist
- name: Wait until cluster is no longer managed
  shell: |
    KUBECONFIG={{ hub_cluster_kubeconfig }} oc get ns {{ seed_cluster }}
  register: check_cluster_namespace
  ignore_errors: true
  until: check_cluster_namespace.rc != 0
  retries: 36
  delay: 5

- name: Template the gen_checksum.sh script
  template:
    src: gen_checksum.sh
    dest: "{{ install_directory }}/rhacm-ztp/ibu/seed/gen_checksum-{{ ibu_seed_image_version }}.sh"
    mode: 0744

- name: Run the generate checksum script
  shell: |
    cd {{ install_directory }}/rhacm-ztp/ibu/seed
    {{ install_directory }}/rhacm-ztp/ibu/seed/gen_checksum-{{ ibu_seed_image_version }}.sh

- name: Get generate checksum script output
  slurp:
    src: "{{ install_directory }}/rhacm-ztp/ibu/seed/checksum-{{ ibu_seed_image_version }}.yaml"
  register: image_signature_data

- name: Template the seed cluster release-image-signature
  template:
    src: release-image-signature.yml.j2
    dest: "{{ install_directory }}/rhacm-ztp/ibu/seed/cm-release-image-signature-{{ ibu_seed_image_version }}.yml"

- name: Apply the release-image-signature to the seed cluster
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc apply -f {{ install_directory }}/rhacm-ztp/ibu/seed/cm-release-image-signature-{{ ibu_seed_image_version }}.yml

- name: Patch seed cluster to prepare for upgrade
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc patch clusterversion version --type merge -p '{"spec": {"channel": "{{ ibu_upgrade_channel }}", "upstream": "http://{{ rhacm_disconnected_registry }}:8081/upgrade/upgrade-graph_{{ ibu_upgrade_channel }}"}}'

- name: Check if seed cluster has availableUpdates
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc get clusterversion version -o json | jq '.status.availableUpdates[] | select(.version=="{{ ibu_seed_image_version }}")'
  register: check_availableupdates
  until: check_availableupdates.rc == 0
  retries: 60
  delay: 1

- name: Trigger seed cluster to upgrade via patch
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc patch clusterversion version --type merge -p '{"spec": {"desiredUpdate": {"version": "{{ ibu_seed_image_version }}"}}}'

# Wait 1 hour to see if completed upgrading
- name: Check if seed cluster is upgraded
  shell: |
    KUBECONFIG={{ seedcluster_kubeconfig }} oc get clusterversion version -o json | jq -r '.status.history[] | select(.version=="{{ ibu_seed_image_version }}").state'
  register: check_cluster_version
  ignore_errors: true
  until: check_cluster_version.stdout == "Completed"
  retries: 360
  delay: 10
